{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Dog application v2\\\\dogstagram\\\\src\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport DogCard from \"../components/dogCard\";\nimport { Autocomplete, Button, Pagination, Stack, TextField } from \"@mui/material\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IndexPage() {\n  _s();\n\n  const [breedDisplayList, setbreedDisplayList] = useState([]);\n  const [dogs, setDogs] = useState([]);\n  const [page, setPage] = useState(1);\n  const [breeds, setBreeds] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchDogSearchResults(0);\n    fetchDogBreedResults();\n  }, []);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    fetchDogSearchResults(value - 1);\n  };\n\n  const fetchDogSearchResults = (pageIndex, breedId) => {\n    var queryString = `https://api.thedogapi.com/v1/images/search?limit=8&page=${pageIndex}&order=Desc`;\n    if (breedId) queryString += `&breed_ids=${breedId}`;\n    axios.get(queryString).then(response => {\n      setDogs(response.data);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  };\n\n  const fetchDogBreedResults = () => {\n    axios.get(`https://api.thedogapi.com/v1/breeds`).then(response => {\n      setBreeds(response.data);\n      constructBreedList(response.data);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  };\n\n  const fetchSpecificBreed = value => {\n    debugger;\n    axios.get(` https://api.TheDogAPI.com/images/search?breed_id=${{\n      value\n    }}`).then(response => {\n      debugger;\n      setDogs(response.data);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  };\n\n  const constructBreedList = breeds => {\n    let toPushBreeds = [];\n    debugger;\n    breeds === null || breeds === void 0 ? void 0 : breeds.forEach(breed => {\n      toPushBreeds.push({\n        label: breed.name,\n        id: breed.id\n      });\n    });\n    setbreedDisplayList(toPushBreeds);\n  };\n\n  const navigateToFavourites = () => {\n    navigate('favourites');\n  };\n\n  const handleBreedChange = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      marginLeft: \"13%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px\",\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            float: \"left\"\n          },\n          onClick: () => {\n            navigateToFavourites();\n          },\n          children: \"Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: breedDisplayList && breedDisplayList.length > 0 ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onChange: (event, value) => {\n            debugger;\n            if (value && value !== null && value !== void 0 && value.id) // TODO save to state to allow page number change\n              fetchDogSearchResults(0, value === null || value === void 0 ? void 0 : value.id);\n          },\n          disablePortal: true,\n          id: \"combo-box-demo\",\n          options: breedDisplayList,\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Breed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: dogs && dogs.length > 0 ? dogs.map((dog, index) => {\n        var _dog$breeds$, _dog$breeds$2;\n\n        return /*#__PURE__*/_jsxDEV(DogCard, {\n          url: dog.url,\n          id: dog.id,\n          title: (_dog$breeds$ = dog.breeds[0]) === null || _dog$breeds$ === void 0 ? void 0 : _dog$breeds$.name,\n          description: (_dog$breeds$2 = dog.breeds[0]) === null || _dog$breeds$2 === void 0 ? void 0 : _dog$breeds$2.bred_for\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      style: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"40%\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 10,\n        page: page,\n        onChange: handlePageChange,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(IndexPage, \"pYagPyMsTduizyAJIq68rR4Julw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Dog application v2/dogstagram/src/pages/index.tsx"],"names":["axios","React","useEffect","useState","DogCard","Autocomplete","Button","Pagination","Stack","TextField","useNavigate","IndexPage","breedDisplayList","setbreedDisplayList","dogs","setDogs","page","setPage","breeds","setBreeds","navigate","fetchDogSearchResults","fetchDogBreedResults","handlePageChange","event","value","pageIndex","breedId","queryString","get","then","response","data","catch","error","console","constructBreedList","fetchSpecificBreed","toPushBreeds","forEach","breed","push","label","name","id","navigateToFavourites","handleBreedChange","width","marginLeft","margin","display","float","length","params","flexWrap","map","dog","index","url","bred_for","marginRight","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAGA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,YAAT,EAAuBC,MAAvB,EAAwEC,UAAxE,EAA4FC,KAA5F,EAAmGC,SAAnG,QAAoH,eAApH;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAqB,EAArB,CAAxD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAQ,EAAR,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AAEA,QAAMiB,QAAQ,GAAGV,WAAW,EAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,qBAAqB,CAAC,CAAD,CAArB;AACAC,IAAAA,oBAAoB;AACvB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAoCC,KAApC,KAAsD;AAC3ER,IAAAA,OAAO,CAACQ,KAAD,CAAP;AACAJ,IAAAA,qBAAqB,CAACI,KAAK,GAAG,CAAT,CAArB;AACH,GAHD;;AAKA,QAAMJ,qBAAqB,GAAG,CAACK,SAAD,EAAoBC,OAApB,KAAyC;AACnE,QAAIC,WAAW,GAAI,2DAA0DF,SAAU,aAAvF;AACA,QAAIC,OAAJ,EACIC,WAAW,IAAK,cAAaD,OAAQ,EAArC;AACJ3B,IAAAA,KAAK,CAAC6B,GAAN,CAAUD,WAAV,EACKE,IADL,CACUC,QAAQ,IAAI;AACdhB,MAAAA,OAAO,CAACgB,QAAQ,CAACC,IAAV,CAAP;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KANL;AAOH,GAXD;;AAaA,QAAMZ,oBAAoB,GAAG,MAAM;AAC/BtB,IAAAA,KAAK,CAAC6B,GAAN,CAAW,qCAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdZ,MAAAA,SAAS,CAACY,QAAQ,CAACC,IAAV,CAAT;AACAI,MAAAA,kBAAkB,CAACL,QAAQ,CAACC,IAAV,CAAlB;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAPL;AAQH,GATD;;AAYA,QAAMG,kBAAkB,GAAIZ,KAAD,IAAmB;AAC1C;AACAzB,IAAAA,KAAK,CAAC6B,GAAN,CAAW,qDAAoD;AAAEJ,MAAAA;AAAF,KAAU,EAAzE,EACKK,IADL,CACUC,QAAQ,IAAI;AACd;AACAhB,MAAAA,OAAO,CAACgB,QAAQ,CAACC,IAAV,CAAP;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAPL;AAQH,GAVD;;AAaA,QAAME,kBAAkB,GAAIlB,MAAD,IAAiC;AACxD,QAAIoB,YAAgC,GAAG,EAAvC;AACA;AACApB,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEqB,OAAR,CAAgBC,KAAK,IAAI;AACrBF,MAAAA,YAAY,CAACG,IAAb,CAAkB;AAAEC,QAAAA,KAAK,EAAEF,KAAK,CAACG,IAAf;AAAqBC,QAAAA,EAAE,EAAEJ,KAAK,CAACI;AAA/B,OAAlB;AACH,KAFD;AAGA/B,IAAAA,mBAAmB,CAACyB,YAAD,CAAnB;AACH,GAPD;;AASA,QAAMO,oBAAoB,GAAG,MAAM;AAC/BzB,IAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,GAFD;;AAGA,QAAM0B,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAZ;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAZ;AAAA,8BACI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAnC;AACI,UAAA,OAAO,EAAE,MAAM;AAAEN,YAAAA,oBAAoB;AAAI,WAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,kBACKtC,gBAAgB,IAAIA,gBAAgB,CAACwC,MAAjB,GAA0B,CAA9C,gBACG,QAAE,YAAF;AACI,UAAA,QAAQ,EAAE,CAAC5B,KAAD,EAAaC,KAAb,KAAgD;AACtD;AACA,gBAAIA,KAAK,IAAIA,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEmB,EAApB,EACI;AACAvB,cAAAA,qBAAqB,CAAC,CAAD,EAAII,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEmB,EAAX,CAArB;AACP,WANL;AAOI,UAAA,aAAa,MAPjB;AAQI,UAAA,EAAE,EAAC,gBARP;AASI,UAAA,OAAO,EAAEhC,gBATb;AAUI,UAAA,EAAE,EAAE;AAAEmC,YAAAA,KAAK,EAAE;AAAT,WAVR;AAWI,UAAA,WAAW,EAAGM,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAX7B;AAAA;AAAA;AAAA;AAAA,gBADH,GAaQ;AAdb;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2BI;AAAK,MAAA,KAAK,EAAE;AAAEH,QAAAA,OAAO,EAAE,MAAX;AAAmBI,QAAAA,QAAQ,EAAE;AAA7B,OAAZ;AAAA,gBAEQxC,IAAI,IAAIA,IAAI,CAACsC,MAAL,GAAc,CAAtB,GAA0BtC,IAAI,CAACyC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAAA;;AAC/C,4BAAQ,QAAC,OAAD;AAAS,UAAA,GAAG,EAAED,GAAG,CAACE,GAAlB;AAAuB,UAAA,EAAE,EAAEF,GAAG,CAACZ,EAA/B;AACJ,UAAA,KAAK,kBAAEY,GAAG,CAACtC,MAAJ,CAAW,CAAX,CAAF,iDAAE,aAAeyB,IADlB;AAEJ,UAAA,WAAW,mBAAEa,GAAG,CAACtC,MAAJ,CAAW,CAAX,CAAF,kDAAE,cAAeyC;AAFxB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAGH,OAJyB,CAA1B,GAIK;AANb;AAAA;AAAA;AAAA;AAAA,YA3BJ,eAoCI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AACtBT,QAAAA,OAAO,EAAE,OADa;AAEtBF,QAAAA,UAAU,EAAE,MAFU;AAGtBY,QAAAA,WAAW,EAAE,MAHS;AAItBb,QAAAA,KAAK,EAAE,KAJe;AAKtBc,QAAAA,SAAS,EAAE;AALW,OAA1B;AAAA,6BAOI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,EAAnB;AAAuB,QAAA,IAAI,EAAE7C,IAA7B;AAAmC,QAAA,QAAQ,EAAEO,gBAA7C;AAA+D,QAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GAxHuBZ,S;UAOHD,W;;;KAPGC,S","sourcesContent":["import axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Dog from \"../models/dog\";\r\nimport Breed from \"../models/breed\";\r\nimport DogCard from \"../components/dogCard\";\r\nimport BreedDisplayList from \"../models/breedSelect\"\r\nimport { Autocomplete, Button, FormControl, Grid, InputLabel, MenuItem, Pagination, Select, Stack, TextField } from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function IndexPage() {\r\n\r\n    const [breedDisplayList, setbreedDisplayList] = useState<BreedDisplayList[]>([]);\r\n    const [dogs, setDogs] = useState<Dog[]>([]);\r\n    const [page, setPage] = useState(1);\r\n    const [breeds, setBreeds] = useState<Breed[]>();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchDogSearchResults(0);\r\n        fetchDogBreedResults();\r\n    }, []);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        fetchDogSearchResults(value - 1);\r\n    };\r\n\r\n    const fetchDogSearchResults = (pageIndex: number, breedId?: number) => {\r\n        var queryString = `https://api.thedogapi.com/v1/images/search?limit=8&page=${pageIndex}&order=Desc`\r\n        if (breedId)\r\n            queryString += `&breed_ids=${breedId}`\r\n        axios.get(queryString)\r\n            .then(response => {\r\n                setDogs(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const fetchDogBreedResults = () => {\r\n        axios.get(`https://api.thedogapi.com/v1/breeds`)\r\n            .then(response => {\r\n                setBreeds(response.data);\r\n                constructBreedList(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n\r\n    const fetchSpecificBreed = (value: number) => {\r\n        debugger;\r\n        axios.get(` https://api.TheDogAPI.com/images/search?breed_id=${{ value }}`)\r\n            .then(response => {\r\n                debugger;\r\n                setDogs(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n\r\n    const constructBreedList = (breeds: Breed[] | undefined) => {\r\n        let toPushBreeds: BreedDisplayList[] = [];\r\n        debugger;\r\n        breeds?.forEach(breed => {\r\n            toPushBreeds.push({ label: breed.name, id: breed.id })\r\n        });\r\n        setbreedDisplayList(toPushBreeds);\r\n    }\r\n\r\n    const navigateToFavourites = () => {\r\n        navigate('favourites');\r\n    }\r\n    const handleBreedChange = () => {\r\n\r\n    }\r\n    return (\r\n        <div style={{ width: \"80%\", marginLeft: \"13%\" }}>\r\n            <div style={{ margin: \"30px\", display: \"inline-block\" }}>\r\n                <div>\r\n                    <Button variant=\"contained\" style={{ float: \"left\" }}\r\n                        onClick={() => { navigateToFavourites() }}\r\n                    >\r\n                        Favourites\r\n                    </Button>\r\n                </div>\r\n                <div style={{ display: \"inline-block\" }}>\r\n                    {breedDisplayList && breedDisplayList.length > 0 ?\r\n                        < Autocomplete\r\n                            onChange={(event: any, value: BreedDisplayList | null) => {\r\n                                debugger;\r\n                                if (value && value?.id)\r\n                                    // TODO save to state to allow page number change\r\n                                    fetchDogSearchResults(0, value?.id);\r\n                            }}\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={breedDisplayList}\r\n                            sx={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Breed\" />}\r\n                        /> : null\r\n\r\n                    }\r\n                </div></div>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                {\r\n                    dogs && dogs.length > 0 ? dogs.map((dog, index) => {\r\n                        return (<DogCard url={dog.url} id={dog.id}\r\n                            title={dog.breeds[0]?.name}\r\n                            description={dog.breeds[0]?.bred_for} />)\r\n                    }) : null\r\n                }\r\n            </div>\r\n            <Stack spacing={2} style={{\r\n                display: \"block\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"40%\",\r\n                marginTop: \"20px\"\r\n            }}>\r\n                <Pagination count={10} page={page} onChange={handlePageChange} size=\"large\" />\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}